program
  .command("{{{actionName}}}")
  .argument('[params_file]', 'JSON file containing all parameters (use @params.json format)')
{{{options}}}
  .description(`
{{{actionDocumentation}}}:

Usage 1 - Individual options:
  {{{cliUsageExample}}}

Usage 2 - JSON file:
  {{{commandPrefix}}} {{{actionName}}} @file.json

Usage 3 - Mixed Usage:
  {{{mixedUsageExample}}}

Parameters:
{{{paramDocs}}}
`)
  .usage('<action> [options]')
  .addHelpText('after', `
Examples:

1. Using individual options:
   {{{cliUsageExample}}}

2. Using JSON file:
   $ {{{commandPrefix}}} {{{actionName}}} @params.json

3. Mixed approach (JSON file + CLI overrides):
   {{{mixedUsageExample}}}

{{{jsonFileExample}}}`)
  .action(async (paramsFile, options) => {
    try {
      
      const output = await {{{actionName}}}Action(paramsFile, options);
      console.log(printColoredJSON(output));
      process.exit(0);
    } catch (err) {
      console.error("Error message:", err.message);
      console.error("Error executing:", printColoredJSON(err));
      process.exit(1);
    }
  });
